#!/bin/env bash
source util

interpolate_rgb() {
  local r1=$1 g1=$2 b1=$3
  local r2=$4 g2=$5 b2=$6
  local n=$7

  if (( n < 2 )); then
    echo "Error: N must be at least 2"
    return 1
  fi

  for ((i=0; i<n; i++)); do
    # Integer interpolation using rounding
    r=$(( r1 + ( (r2 - r1) * i + (n - 1) / 2 ) / (n - 1) ))
    g=$(( g1 + ( (g2 - g1) * i + (n - 1) / 2 ) / (n - 1) ))
    b=$(( b1 + ( (b2 - b1) * i + (n - 1) / 2 ) / (n - 1) ))

    printf "%d %d %d\n" "$r" "$g" "$b"
  done
}


__erase_menu() {
  local x=${x-0} y=${y-0} choice=${choice-1}
  for i in $(seq $#); do
    setyx $((i-1)) 0
    local opt=${!i}
    # addstr "${#opt}"
    addstr "  "
    addstr "$(printf '%*s' ${#opt})"
    resetcolor
  done
  setyx 0 0
}

__disable_menu() {
  local x=${x-0} y=${y-0} choice=${choice-1}
  for i in $(seq $#); do
    setyx $((i-1)) 0
    if [[ ${choice:=1} == $i ]]; then
      fgcolor white; addstr '> '
    else
      fgcolor grey; addstr '  '
    fi
    addstr "${!i}"
    resetcolor
  done
  setyx 0 0
}

__draw_menu() {
  local x=${x-0} y=${y-0} choice=${choice-1}
  local indicator=${indicator-'>'} text_color=${text_color-'255 255 255'} selected_color=${selected_color-'255 175 135'}
  setrgb $text_color
  for i in $(seq $#); do
    setyx $((i-1)) 0
    if [[ ${choice:=1} == $i ]]; then
      setrgb $selected_color
      addstr "$indicator ${!i}"
      setrgb $text_color
    else
      addstr "  ${!i}"
    fi
  done
  resetcolor
  setyx 0 0
}

__transition_menu() {
  local x=${x-0} y=${y-0} choice=${choice-1} prev_choice=${prev_choice-1} indicator=${indicator-'>'}
  local text_color=${prev_color-"255 255 255"} selected_color=${selected_color-"255 175 135"}
  local i
  local n=15
  mapfile -t colors < <(interpolate_rgb $selected_color $text_color $n)
  for ((i = 0; i < $n; i++)); do
    setyx $((prev_choice-1)) 0
    setrgb ${colors[i]}
    addstr "  ${!prev_choice}"
    setyx $((choice-1)) 0
    setrgb ${colors[n-i-1]}
    addstr "> ${!choice}"
    sleep 0.001
  done
  resetcolor
  setyx 0 0
}




__exec_menu() {
  local x=${x-0} y=${y-0} choice=${choice-1} prev_choice=1
  setyx 0 0
  __draw_menu "$@"
  while true; do
    case $(getkey) in
      1) echo one >&2 ;;
      2) echo two >&2 ;;
      ${KEYS[CR]} | 'l') break ;;
      ${KEYS[UP]} | 'k') ((choice >   1)) && {  prev_choice=$((choice--)); __transition_menu "$@"; } ;;
      ${KEYS[DN]} | 'j') ((choice <  $#)) && {  prev_choice=$((choice++)); __transition_menu "$@"; } ;;
    esac
  done
  indicator=' ' text_color='150 150 150' __draw_menu "$@"
  echo "${!choice}"
}


minimenu() {
  : ${y:=0} ${x:=0}
  # fgcolor salmon1; addstr "$1" 0 0; resetcolor; shift 1
  chosen=$(__exec_menu "$@")
  # __exec_menu "$@"
  # addstr "         " 0 0
  # y=$((y+1)) __erase_menu "$@"
  # __disable_menu "$@"
  echo $chosen
}

